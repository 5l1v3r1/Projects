import glob
import os

import MySQLdb
from pyAudioAnalysis import audioTrainTest as aT

from config import *  # Set mysql parameter is a file called config.py: host=, user=, passwd=, database=


def insert_row(cursor, table, myDict):  # Inserts a python dict obeject into mysql table as a new row
    # http://stackoverflow.com/a/9336427
    placeholders = ', '.join(['%s'] * len(myDict))
    columns = ', '.join(myDict.keys())
    sql = "INSERT INTO %s ( %s ) VALUES ( %s )" % (table, columns, placeholders)
    cursor.execute(sql, myDict.values())


def test_model(test_dirs, model_dir, modelName='svmTest', classifierType='svm'):
    # Used to test an existing model against new samples;
    # Test directories should contain the same categories and be in the same order as the original training data, but should contain seperate samples
    # model_dir is the path to the model file generated by the training function
    # modelName is the name of the model file generated by the trainging function
    # classifierType is the ML method used and should be the same as the training method used. Should be one of: svm, knn, gradientboosting, randomforest, extratrees

    # The following sets up a new table in the given db to store information about each classification; The table will be given the same name as the model file; the table will be dropped initially if a table with the same name already exists.
    table_setup = '(filename VARCHAR(1024), classNames VARCHAR(1024), class VARCHAR(1024), identifiedAs VARCHAR(1024), probabilities VARCHAR(1024), identifiedCorrectly VARCHAR(1024), PRIMARY KEY (filename));'

    with MySQLdb.connect(host=host, user=user, passwd=passwd, db=database) as cur:  # config is in config.py: see above

        try:
            cur.execute("DROP TABLE " + modelName)
        except:
            pass

        cur.execute("CREATE TABLE " + modelName + table_setup)

    total_files_tested = 0.0
    total_correct = 0.0
    for i in xrange(0, len(test_dirs)):  # Iterate through each test directory
        dir = test_dirs[i]
        os.chdir(dir)
        for file in glob.glob("*.wav"):  # Iterate through each wave file in the directory
            Result, P, classNames = aT.fileClassification(file, model_dir + modelName, classifierType)  # Test the file
            current_file_results = {
                'filename': str(file),
                'classNames': str(classNames),
                'class': str(classNames[i]),
                'identifiedAs': str(classNames[int(Result)]),
                'probabilities': str(P),
                'identifiedCorrectly': str(Result == float(i))
            }
            with MySQLdb.connect(host=host, user=user, passwd=passwd, db=database) as cur:
                insert_row(cur, modelName,
                           current_file_results)  # insert statistics from this test as a new row in the table

            total_files_tested += 1.0
            if Result == float(i):
                total_correct += 1.0

    overall_acc = total_correct / total_files_tested

    print total_correct, total_files_tested, overall_acc  # Prints the total number of tests performed, the number that were correctly identified, and the overall accuracy as a decimal


if __name__ == '__main__':
    test_dirs = ["C:\\Users\\zacha\\PycharmProjects\\untitled\\american_robin_test\\",
                 "C:\\Users\\zacha\\PycharmProjects\\untitled\\baltimore_oriole_test\\",
                 "C:\\Users\\zacha\\PycharmProjects\\untitled\\house_wren_test\\",
                 "C:\\Users\\zacha\\PycharmProjects\\untitled\\wood_thrush_test\\"]
    model_dir = os.getcwd() + '\\'
    test_model(test_dirs, model_dir)
